{
  "categories": [],
  "content": "A comprehensive guide to essential tools for Developers",
  "created": "2023-10-09T16:16:28.286Z",
  "guideType": "onboarding",
  "key": "useful-tools-optimism-university-460",
  "name": "Useful Tools",
  "publishStatus": "Live",
  "steps": [
    {
      "content": "In the world of blockchain development, transaction debugging tools play a crucial role in ensuring the smooth execution of transactions and identifying any issues that may arise. These tools provide developers with valuable insights into the state of their contracts and help them trace the flow of transactions. Let's explore the popular transaction debugging tools: \n\n### Tenderly\n\n[Tenderly](https://tenderly.co/) is a powerful tool that allows developers to inspect the execution of transactions on the Ethereum Mainnet or Goerli testnet. With Tenderly, you can dive deep into the state of your verified contract at any step of the transaction's execution. This level of detail not only reduces development time but also enhances your understanding of how transactions flow. Additionally, Tenderly enables you to step into or over function calls, providing further insights into the execution process.\n\n<div align=\"center\">\n  <img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696868165963_untitled-2023-09-21-1651.png\"/>\n</div>\n\n### Etherscan\n\n[Etherscan](https://explorer.optimism.io/), another widely used transaction debugging tool, offers a range of features to help developers analyze transactions. By using Etherscan, you can not only view events associated with a transaction but also access revert messages. This information is invaluable in identifying any errors or unexpected behavior that may have occurred during the transaction's execution. Etherscan supports both the OP Mainnet and the Goerli testnet, making it a versatile tool for developers.\n\n### Blockscout\n\nWhile Tenderly and Etherscan are well-known transaction debugging tools, it's worth mentioning [Blockscout](https://www.blockscout.com/) as well. Blockscout provides developers with the ability to view events on both the [OP Mainnet](https://optimism.blockscout.com/) and the [Goerli](https://optimism-goerli.blockscout.com/) testnet. By leveraging Blockscout, developers can gain insights into the events associated with their transactions, allowing them to track the flow of data and identify any potential issues.",
      "name": "Transaction Debugging Tools",
      "stepItems": [],
      "uuid": "2cf1603a-f02a-45a4-9110-788f9d75bb5d"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [
        {
          "answerKeys": [
            "A"
          ],
          "choices": [
            {
              "content": "Tenderly",
              "key": "A"
            },
            {
              "content": "Etherscan",
              "key": "B"
            },
            {
              "content": "Blockscout",
              "key": "C"
            },
            {
              "content": "None of the above",
              "key": "D"
            }
          ],
          "content": "Which transaction debugging tool allows developers to inspect the execution of transactions on the Ethereum Mainnet or Goerli testnet?",
          "type": "SingleChoice",
          "uuid": "633239aa-3402-4787-a055-e5aac34b9e55",
          "explanation": "Tenderly is a powerful tool that allows developers to inspect the execution of transactions on the Ethereum Mainnet or Goerli testnet."
        }
      ],
      "uuid": "e01580ed-93f9-40fc-b801-8d37c267bc2a"
    },
    {
      "content": "### What are Network Faucets?\n\nNetwork faucets are services that provide users with testnet Ether (ETH) on various test networks. These faucets are specifically designed for development and testing purposes. They allow developers to experiment and test their applications without using real cryptocurrencies. By distributing testnet ETH, network faucets enable developers to simulate real-world scenarios and ensure the functionality and security of their applications.\n\n### Types of Network Faucets\n\nThere are several types of network faucets available for developers: \n\n<div align=\"center\">\n  <img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696866934604_untitled-2023-09-21-1651.png\"/>\n</div>\n\n#### Superchain Faucet\n\nOne popular option is the [Superchain Faucet](https://app.optimism.io/faucet), which allows users to claim free testnet Ether on testnet OP Chains like OP Goerli. This developer tool is useful for testing applications on specific test networks. \n\n#### Paradigm MultiFaucet\n\n[Paradigm's MultiFaucet](https://faucet.paradigm.xyz/) is another convenient option that provides ETH on multiple testnets simultaneously. This makes it easier for developers to access testnet ETH for various testing purposes.\n\n### Using Coinbase & QuickNode\n\n[Coinbase Wallet](https://www.coinbase.com/wallet) users have the advantage of obtaining test ETH directly from the Coinbase Wallet extension or through the [Coinbase Faucet website](https://coinbase.com/faucets/optimism-goerli-faucet). This integration simplifies the process of acquiring testnet ETH for OP Goerli. Another option is the Optimism Faucet for Goerli by [QuickNode](https://faucet.quicknode.com/optimism/goerli), which offers an effortless way to acquire testnet ETH for OP Goerli. These user-friendly faucets make it convenient for developers to access the necessary resources for testing their applications.\n\n### Bridging Testnet ETH to OP Goerli\n\nIn some cases, developers may need to obtain L1 Goerli ETH from an Ethereum testnet faucet and then use the Optimism Bridge interface to bridge the testnet ETH to/from OP Goerli. This process allows developers to transfer testnet ETH between different networks, enabling them to test the functionality and compatibility of their applications across multiple environments. Additionally, if developers require ETH on OP Mainnet for contract deployment, they can bridge [ETH from Ethereum Mainnet to OP Mainnet](https://app.optimism.io/bridge).\n\n### Bridging USDC for Expenses\n\nFor developers who need ETH for expenses, there is an alternative option available. By bridging enough USDC courtesy of [Perpetual Protocol](https://perp.com/), developers can obtain ETH to cover their expenses. This provides developers with a convenient way to access the necessary funds for testing and deploying their applications.",
      "name": "Network Faucets",
      "stepItems": [],
      "uuid": "6fb13553-e5b8-4020-ad2b-c8e9d922e7dc"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [
        {
          "answerKeys": [
            "B"
          ],
          "choices": [
            {
              "content": "To provide real cryptocurrencies for trading",
              "key": "A"
            },
            {
              "content": "To provide testnet Ether for development and testing purposes",
              "key": "B"
            },
            {
              "content": "To provide a platform for buying and selling cryptocurrencies",
              "key": "C"
            },
            {
              "content": "To provide a platform for storing cryptocurrencies",
              "key": "D"
            }
          ],
          "content": "What is the main purpose of Network Faucets?",
          "type": "SingleChoice",
          "uuid": "3cc01e2e-d40c-4588-81b7-b0eab23c4ea5",
          "explanation": "Network faucets are designed for development and testing purposes. They allow developers to experiment and test their applications without using real cryptocurrencies."
        },
        {
          "answerKeys": [
            "D"
          ],
          "choices": [
            {
              "content": "Real Ether for trading",
              "key": "A"
            },
            {
              "content": "A platform for buying and selling cryptocurrencies",
              "key": "B"
            },
            {
              "content": "A platform for storing cryptocurrencies",
              "key": "C"
            },
            {
              "content": "Testnet Ether on multiple testnets simultaneously",
              "key": "D"
            }
          ],
          "content": "What does the Paradigm MultiFaucet provide?",
          "type": "SingleChoice",
          "uuid": "dc00e330-337f-4cc6-a0ab-ac7c5b5b22e7",
          "explanation": "Paradigm's MultiFaucet provides ETH on multiple testnets simultaneously, making it easier for developers to access testnet ETH for various testing purposes."
        }
      ],
      "uuid": "2b578cdf-d9d2-4d0e-a087-810ac8439673"
    },
    {
      "content": "There are several reliable and efficient Node & API providers available for developers working with the Optimism blockchain:\n\n### Ankr\n\n[Ankr](https://www.ankr.com/) is a provider that offers a decentralized and geo-distributed Optimism RPC. They have a combination of independent blockchain nodes running worldwide, ensuring low-latency and highly reliable connections. They provide both free and premium options, allowing users to choose between a pay-as-you-go model or a free tier. Additionally, Ankr offers access to developer tooling on OP Mainnet and testnets, including SDKs and Advanced APIs such as NFT, Token, and Query API.\n\n### Alchemy\n\n[Alchemy](https://docs.alchemy.com/reference/optimism-api-quickstart/?a=818c11a8da) is a well-known API provider and developer platform. They offer a robust free tier that provides access to enhanced features like SDKs and enhanced APIs. Additionally, Alchemy hosts OP Mainnet and testnet nodes, allowing developers to easily access and utilize their services.\n\n### Blast\n\n[Blast](https://blastapi.io/) is another provider that offers access to dedicated OP Mainnet and testnet nodes. They provide free data access up to 12 million API calls per month and 25 requests per second. Additionally, Blast offers [Public APIs](https://blastapi.io/public-api/optimism) that can be easily added in Metamask, making it convenient for developers to integrate their applications.\n\n### BlockSpaces\n\n[BlockSpaces](https://www.blockspaces.com/web3-infrastructure) is a multiweb integration platform that currently offers free Web3 infrastructure. They support up to 10 million transactions daily, making it a reliable choice for developers. By signing up for their services, developers can integrate their OP Mainnet dApps with other web2 business platforms like Quickbooks.\n\n<div align=\"center\">\n  <img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696868007823_untitled-2023-09-21-1651.png\"/>\n</div>\n\n### BlockVision\n\n[BlockVision](https://blockvision.org/) is a one-stop development platform and onchain data retrieval portal for developers. They pride themselves on offering impressively low-latency connections and high availability. With BlockVision, developers can access the Optimism blockchain with ease and reliability.\n\n### Chainnodes\n\n[Chainnodes](https://www.chainnodes.org/) is a provider that offers low-latency archival nodes for OP Mainnet and testnets. They have a transparent pricing model and a free tier available for users. \n\n### GetBlock \n\n[GetBlock](https://getblock.io/en/nodes/optimism/) is a developer tool that provides simple and reliable API access to multiple blockchains, including Optimism. Infura is a Web3 infrastructure provider that offers free access to hosted OP Mainnet and testnet nodes. They also have paid plans available for users who require additional features. \n\n### NodeReal\n\n[NodeReal](https://nodereal.io/) is a comprehensive blockchain infrastructure and services provider, aiming to support the growth and adoption of the Web3 ecosystem. They offer both free and paid options for connecting to their shared OP Mainnet node. ",
      "name": "Node & API Providers",
      "stepItems": [],
      "uuid": "4fb17ab6-f949-46b3-986f-74323b2476cf"
    },
    {
      "content": "### Oracles\n\n[Oracles](https://ethereum.org/en/developers/docs/oracles/) are incredibly useful tools in the world of blockchain technology. They allow code running on a blockchain to access a wide range of information, providing offchain data onchain. One common use case for oracles is in [stablecoins](https://ethereum.org/en/stablecoins/) that accept ETH as collateral. These stablecoins need to know the ETH/USD exchange rate to determine how many stablecoins can be given to a user for a specific amount of ETH. Oracles play a crucial role in providing this information.\n\n### Types of Oracles\n\nThere are two main types of oracles:\n\n#### Push Oracles \n\nPush oracles continuously update and always have up-to-date information available onchain. \n\n<div align=\"center\">\n  <img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696867532814_untitled-2023-09-21-1651.png\"/>\n</div>\n\n#### Pull Oracles\n\nPull oracles are only updated when information is requested by a contract. Pull oracles can be further divided into two types:\n\n- **Double-transaction Oracles**\n\nIt require two transactions, where the first transaction requests information and triggers an offchain mechanism to provide the answer. The second transaction reads the result from the oracle and uses it. \n\n- **Single-transaction Oracles**\n\nLike [Chainlink's random number generator](https://docs.chain.link/docs/get-a-random-number/#request-random-values), only require one transaction and use a callback to inform a contract of the result.\n\n### Gas Oracle\n\n[Gas Oracle](https://github.com/ethereum-optimism/optimism/blob/233ede59d16cb01bdd8e7ff662a153a4c3178bdd/packages/contracts/contracts/L2/predeploys/OVM_GasPriceOracle.sol) is a push oracle that provides information about [gas prices and related parameters](https://community.optimism.io/docs/developers/build/transaction-fees.html). It can calculate the total cost of a transaction before it is sent. This oracle is available on OP Mainnet and OP Goerli. Gas price parameters are updated onchain whenever there are changes, but the L1 gas price is only pushed once every 5 minutes and can change by up to 20% each time.\n\n### Chainlink\n\n[Chainlink](https://chain.link/) is another popular oracle provider that offers a variety of [price feeds](https://docs.chain.link/docs/optimism-price-feeds/). These price feeds provide up-to-date information that can be accessed onchain. Developers can use Chainlink feeds to get the latest information for their applications. Chainlink's feeds are widely used and can be integrated into various blockchain projects.\n\n### Tellor\n\n[Tellor](https://tellor.io/) is a permissionless, censorship-resistant, and customizable oracle. It allows users to put any verifiable data onchain, including spot price feeds, TWAPs, random numbers, and EVM calldata. Tellor has a mechanism to reward entities that provide accurate information and penalize those that provide incorrect information. It operates as a pull oracle, where users fund specific feeds to get updated data reports. However, under certain circumstances, it can also act as a push oracle.\n\n### Band\n\n[Band](https://bandprotocol.com/vrf) is an oracle provider that offers [onchain randomness](https://bandprotocol.com/vrf). It provides a source of verifiable randomness that can be used in various applications. This feature is particularly useful for applications that require random number generation or other forms of onchain randomness.\n\n### UMA\n\n[UMA](https://umaproject.org/) is a generic oracle that allows any contract to request information by asking a question. Staked entities can provide answers, and external entities can dispute the proposed answer by providing their own answer and staking their tokens. The majority of token holders who vote truthfully are rewarded. UMA operates as a pull oracle, meaning that information is not obtained until it is requested by a contract. This requires two transactions, with the first transaction triggering the request and the second transaction retrieving the response.\n\n### Uniswap\n\nAlthough technically not an oracle, [Uniswap](https://uniswap.io/) pools provide quotes that give the relative costs of assets. These quotes can be used to determine asset prices, but it's important to note that relying solely on onchain asset prices, especially in low liquidity pools, can leave one vulnerable to price manipulation. To use Uniswap as an oracle, one can find the pool address by looking at the Uniswap factory and use specific parameters to retrieve the pool state.",
      "name": "Oracles",
      "stepItems": [],
      "uuid": "a809f232-2f62-4074-85ac-c35d2c9443ac"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [
        {
          "answerKeys": [
            "C"
          ],
          "choices": [
            {
              "content": "They are used to mine cryptocurrencies",
              "key": "A"
            },
            {
              "content": "They are used to create new blockchains",
              "key": "B"
            },
            {
              "content": "They provide offchain data onchain",
              "key": "C"
            },
            {
              "content": "They are used to regulate the value of cryptocurrencies",
              "key": "D"
            }
          ],
          "content": "What is the main purpose of Oracles in blockchain technology?",
          "type": "SingleChoice",
          "uuid": "4992def3-73bb-4931-ac16-752426f331ee",
          "explanation": "Oracles allow code running on a blockchain to access a wide range of information, providing offchain data onchain."
        },
        {
          "answerKeys": [
            "B"
          ],
          "choices": [
            {
              "content": "Push Oracles are only updated when information is requested while Pull Oracles continuously update",
              "key": "A"
            },
            {
              "content": "Push Oracles continuously update while Pull Oracles are only updated when information is requested",
              "key": "B"
            },
            {
              "content": "Both update continuously and always have up-to-date information",
              "key": "C"
            },
            {
              "content": "Both are only updated when information is requested by a contract",
              "key": "D"
            }
          ],
          "content": "What is the difference between Push and Pull Oracles?",
          "type": "SingleChoice",
          "uuid": "65a6fe36-2b36-4413-a9b0-6a6441ac5318",
          "explanation": "Push oracles continuously update and always have up-to-date information available onchain. Pull oracles are only updated when information is requested by a contract."
        }
      ],
      "uuid": "b86a3506-4621-48a5-829f-39cbadfb1d4b"
    },
    {
      "content": "### Account Abstraction\n\nThis is a concept that allows users to use smart contracts as their accounts instead of the traditional Externally Owned Accounts (EOA). While EOAs have been the default choice for most users, the adoption of smart accounts has been increasing due to the enhanced user experiences they offer. By leveraging account abstraction, users can explore new possibilities and create more innovative dapps and wallets.\n\n### Benefits of Smart Account Adoption\nOne significant advantage of using smart contracts as accounts is the cost-effectiveness it brings. For instance, deploying a contract wallet on the OP Stack is 34 times cheaper than on the Ethereum Mainnet. This cost reduction can be a game-changer for developers and businesses looking to build, onboard, and scale their dapps. By utilizing smart contract wallet primitives, developers can leverage the power of account abstraction to create efficient and scalable solutions.\n\n### Tools for Account Abstraction\n\n\n<div align=\"center\">\n  <img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696868051283_untitled-2023-09-21-1651.png\"/>\n</div>\n\n### Account Abstraction Infrastructure\nTo support account abstraction, various infrastructure components have been developed. One such example is the ERC-4337 bundler, which allows developers to bundle multiple transactions together, reducing gas costs and improving efficiency. Additionally, gas manager APIs are available on the OP Mainnet, providing developers with tools to manage gas consumption effectively. These infrastructure components empower developers to optimize their dapps and wallets, ensuring a seamless user experience.\n",
      "name": "Account Abstraction",
      "stepItems": [],
      "uuid": "6280a112-d319-453e-a46b-62a57e1f1ef9"
    },
    {
      "content": "### Meta-Transactions \n\nThey have emerged as a solution to simplify the user experience in blockchain transactions. In traditional blockchain networks, users are required to sign and submit transactions themselves, which involves paying for gas fees. However, with meta-transactions, users can sign transactions that are then submitted and paid for by someone else. This innovative approach opens up new possibilities for business models and allows for alternative means of payment for transactions.\n\n### Advantages of Meta Transactions\n\nThe OP Mainnet is an ideal platform for implementing meta-transactions due to its low gas costs. This affordability enables the exploration of various business models that facilitate payment for transactions through alternative methods. By leveraging meta-transactions on OP Mainnet, users can enjoy a seamless and cost-effective experience, eliminating the need to directly pay for gas fees themselves.\n\n#### Overcoming Barriers for Non-Web3 Users\n\nFor users who are not yet fully committed to web3, the initial experience of paying for gas fees and going through Know Your Customer (KYC) processes can be discouraging. These barriers can lead individuals to seek alternative options and deter them from fully embracing blockchain technology. Meta-transactions provide a solution by allowing users to engage in transactions without the need for upfront payments or KYC processes, making it more accessible and user-friendly for newcomers.\n\n#### Enhancing Privacy and Security\n\nAnother advantage of meta-transactions is the ability to transfer ETH to a new address privately, without creating a direct connection between the address and the user's identity. This enhanced privacy feature is particularly valuable for individuals who prioritize anonymity and security in their transactions. By utilizing meta-transactions, users can maintain a higher level of privacy while still enjoying the benefits of blockchain technology.\n\n#### Alternative Payment Methods and Infrastructure\n\nMeta-transactions offer flexibility in terms of payment methods. Instead of using Ether (ETH) as the primary payment token, users can collect payment for transactions using different tokens, such as ERC-20 tokens. Additionally, off-chain means, such as credit cards, can also be utilized for transaction payments. This versatility allows for a broader range of options and accommodates users who may prefer alternative payment methods.\n\n### The Gas Station Network & Gelato\n\n<div align=\"center\">\n  <img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696867734506_untitled-2023-09-21-1651.png\"/>\n</div>\n\nTo facilitate meta-transactions, infrastructure such as the Gas Station Network (GSN) and Gelato has been developed. \n\nThe [Gas Station Network](https://opengsn.org/) provides distributed infrastructure for meta-transactions, allowing users to create their own relay or pay other relays to handle their transaction traffic. Relays are required to post a bond, which acts as a deterrent against censorship attempts. \n\n[Gelato](https://docs.gelato.network/developer-services/relay/what-is-relaying), on the other hand, utilizes a list of white-listed executors to relay transactions, further enhancing the reliability and security of meta-transactions.\n",
      "name": "Meta Transactions",
      "stepItems": [],
      "uuid": "b9be7345-5773-481a-8200-10dd4bf8923a"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [
        {
          "answerKeys": [
            "B"
          ],
          "choices": [
            {
              "content": "They increase the gas fees for transactions",
              "key": "A"
            },
            {
              "content": "They simplify the user experience by eliminating the need for users to pay for gas fees",
              "key": "B"
            },
            {
              "content": "They make transactions more complicated",
              "key": "C"
            },
            {
              "content": "They decrease the security of transactions",
              "key": "D"
            }
          ],
          "content": "What is the main advantage of using meta-transactions in blockchain networks?",
          "type": "SingleChoice",
          "uuid": "6b4ab8d8-5e46-485b-821d-a28248058fde",
          "explanation": "Meta-transactions allow users to sign transactions that are then submitted and paid for by someone else. This eliminates the need for users to pay for gas fees themselves, simplifying the user experience in blockchain transactions."
        },
        {
          "answerKeys": [
            "D"
          ],
          "choices": [
            {
              "content": "The Gas Station Network (GSN) and Ethereum",
              "key": "A"
            },
            {
              "content": "Bitcoin and Gelato",
              "key": "B"
            },
            {
              "content": "Ethereum and Bitcoin",
              "key": "C"
            },
            {
              "content": "The Gas Station Network (GSN) and Gelato",
              "key": "D"
            }
          ],
          "content": "What infrastructure has been developed to facilitate meta-transactions?",
          "type": "SingleChoice",
          "uuid": "cc1bb400-6d7f-4e94-9a42-209def8fa80c",
          "explanation": "The Gas Station Network (GSN) and Gelato have been developed to facilitate meta-transactions. The GSN provides distributed infrastructure for meta-transactions, while Gelato utilizes a list of white-listed executors to relay transactions."
        }
      ],
      "uuid": "6bf6a94c-94f7-42c5-8c5d-24db6bb0c462"
    },
    {
      "content": "https://community.optimism.io/docs/useful-tools/debugging/\n\nhttps://community.optimism.io/docs/useful-tools/faucets/\n\nhttps://community.optimism.io/docs/useful-tools/providers/\n\nhttps://community.optimism.io/docs/useful-tools/oracles/\n\nhttps://community.optimism.io/docs/useful-tools/account-abstraction/#why-account-abstraction\n\nhttps://community.optimism.io/docs/useful-tools/meta-tx/#",
      "name": "References",
      "stepItems": [],
      "uuid": "39dbf33c-1231-4ebc-bfc1-8990797ee5f5"
    }
  ],
  "thumbnail": "https://d31h13bdjwgzxs.cloudfront.net/academy/optimism-university/Guide/useful_tools_optimism_university_460/1696501729948_rectangle_106.png",
  "uuid": "useful-tools-optimism-university-460",
  "version": 1,
  "priority": 50
}